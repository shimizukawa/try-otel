// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/python-3
{
	"name": "py310",
	"image": "python:3.10-bullseye",
	"features": {
		"ghcr.io/devcontainers/features/common-utils:1": {
			"username": "vscode",
			"uid": "1000",
			"gid": "1000",
			"upgradePackages": "true"
		},
		"ghcr.io/devcontainers/features/docker-in-docker:1": {
			"version": "latest",
			"dockerDashComposeVersion": "v2"
		},
		"ghcr.io/devcontainers/features/git:1": "latest",
		"ghcr.io/devcontainers/features/github-cli:1": "latest",
		"ghcr.io/devcontainers/features/python:1": "none",  // none to install py-utils on base image python
		"ghcr.io/devcontainers/features/node:1": "16"
	},
	"overrideFeatureInstallOrder": [
		"ghcr.io/devcontainers/features/common-utils"
	],
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",

	"containerEnv": {
		// BuildKitについて https://qiita.com/tatsurou313/items/ad86da1bb9e8e570b6fa
		"DOCKER_BUILDKIT": "1",
		"COMPOSE_DOCKER_CLI_BUILD": "1",
	},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": false,
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint"
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		80,
		1888,
		3000,
		4317,
		4318,
		5432,
		8000,
		8025,
		8123,
		8888,
		8889,
		9000,
		9090,
		9093,
		9411,
		13133,
		14318,
		16686,
		55678,
		55679
	],
	"portsAttributes": {
		"80": {
			"label": "nginx",
			"onAutoForward": "notify"
		},
		"1888": {
			"label": "otel-pprof",
			"onAutoForward": "silent"
		},
		"3000": {
			"label": "front",
			"onAutoForward": "silent"
		},
		"4317": {
			"label": "otel-otlp-gRPC",
			"onAutoForward": "silent"
		},
		"4318": {
			"label": "otel-otlp-http",
			"onAutoForward": "silent"
		},
		"5432": {
			"label": "postgres",
			"onAutoForward": "silent"
		},
		"8000": {
			"label": "api",
			"onAutoForward": "silent"
		},
		"8025": {
			"label": "mailhog",
			"onAutoForward": "silent"
		},
		"8123": {
			"label": "clickhouse",
			"onAutoForward": "silent"
		},
		"8888": {
			"label": "otel-prometheus",
			"onAutoForward": "silent"
		},
		"8889": {
			"label": "otel-prometheus",
			"onAutoForward": "silent"
		},
		"9000": {
			"label": "clickhouse",
			"onAutoForward": "silent"
		},
		"9090": {
			"label": "prometheus",
			"onAutoForward": "silent"
		},
		"9093": {
			"label": "alertmanager",
			"onAutoForward": "silent"
		},
		"9411": {
			"label": "zipkin",
			"onAutoForward": "silent"
		},
		"13133": {
			"label": "otel-halthcheck",
			"onAutoForward": "silent"
		},
		"14318": {
			"label": "uptrace",
			"onAutoForward": "silent"
		},
		"16686": {
			"label": "jaeger",
			"onAutoForward": "silent"
		},
		"55678": {
			"label": "otel-opencensus",
			"onAutoForward": "silent"
		},
		"55679": {
			"label": "otel-zpages",
			"onAutoForward": "silent"
		}
	},

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",

	"postCreateCommand": "bash .devcontainer/post_create_command.sh",

	"postStartCommand": "bash .devcontainer/post_start_command.sh"
}