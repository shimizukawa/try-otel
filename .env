# OpenTelemetry Collector
# OTELCOL_IMG=otel/opentelemetry-collector-contrib-dev:latest
OTELCOL_IMG=otel/opentelemetry-collector-contrib:0.63.1
OTELCOL_ARGS=

# OpenTelemetry envs

# https://opentelemetry.io/docs/concepts/sdk-configuration/general-sdk-configuration/
# https://opentelemetry.io/docs/reference/specification/sdk-environment-variables/
# https://opentelemetry.io/docs/reference/specification/resource/sdk/
# https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/
OTEL_RESOURCE_ATTRIBUTES="deployment.environment=demo,service.namespace=myapp"
# OTEL_PROPAGATORS="tracecontext,baggage"
# OTEL_TRACES_EXPORTER="console,otlp"
# OTEL_METRICS_EXPORTER="console,otlp"
# OTEL_LOGS_EXPORTER="console,otlp"

# Expor Endpoint
# https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/
# https://opentelemetry.io/docs/reference/specification/protocol/exporter/#configuration-options
OTEL_EXPORTER_OTLP_ENDPOINT="lvh.me:4317"
OTEL_EXPORTER_OTLP_INSECURE="true"
# https://opentelemetry.io/docs/reference/specification/sdk-environment-variables/
# https://opentelemetry.io/docs/instrumentation/python/automatic/#configuring-the-agent
# https://opentelemetry.io/docs/instrumentation/python/automatic/agent-config/
# OTEL_EXPORTER_OTLP_HEADERS=""
# OTEL_EXPORTER_OTLP_PROTOCOL="grpc"

# Python Provider
OTEL_PYTHON_TRACER_PROVIDER="sdk_tracer_provider"
OTEL_PYTHON_METER_PROVIDER="sdk_meter_provider"
OTEL_PYTHON_LOGGER_PROVIDER="sdk_logger_provider"
OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED="true"

# Instrumentation
# https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/django/django.html#request-headers
OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST="content_type,traceparent,tracestatus"

# Django
# https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/django/django.html#request-attributes
OTEL_PYTHON_DJANGO_TRACED_REQUEST_ATTRS='path_info,content_type'
