# https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/3fd860446371071d409abfc5b101ecc047df9b37/examples/demo/docker-compose.yaml

services:

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"

  otel-collector:
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    restart: on-failure
    user: '0:0' # required for logs
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55678:55678" # opencensus receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: uptrace
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./config/pg-init.sql:/docker-entrypoint-initdb.d/pg-init.sql
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  nginx:
    build:
      context: ./nginx/
    image: nginx-otel:1.22.0
    volumes:
      - ./config/nginx-otel.toml:/etc/nginx/conf.d/nginx-otel.toml
      - ./config/nginx-router.conf:/etc/nginx/conf.d/default.conf
      - ./var/log/nginx:/var/log/nginx
    ports:
      - 80:80
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    image: backend:latest
    volumes:
      - ./backend:/code
    ports:
      - 8000:8000
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/backend
      - OTEL_SERVICE_NAME=django
      # - OTEL_TRACES_EXPORTER=console,otlp
      # - OTEL_METRICS_EXPORTER=console,otlp
      # - OTEL_LOGS_EXPORTER=console,otlp
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
    command:
      - /bin/sh
      - -c
      - |
        python manage.py migrate
        opentelemetry-instrument python manage.py runserver 0.0.0.0:8000 --noreload

  console:
    build:
      context: ./
      dockerfile: ./console/Dockerfile
    image: console:latest
    volumes:
      - ./console:/code
    environment:
      # - OTEL_TRACES_EXPORTER=console,otlp
      # - OTEL_METRICS_EXPORTER=console,otlp
      # - OTEL_LOGS_EXPORTER=console,otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
    command: python client.py
    extra_hosts:
      - 'api.lvh.me:host-gateway'
    profiles:
      - notstart

  console-auto:
    build:
      context: ./
      dockerfile: ./console-auto/Dockerfile
    image: console-auto:latest
    volumes:
      - ./console-auto:/code
    environment:
      # - OTEL_TRACES_EXPORTER=console,otlp
      # - OTEL_METRICS_EXPORTER=console,otlp
      # - OTEL_LOGS_EXPORTER=console,otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
    command: opentelemetry-instrument python client.py
    extra_hosts:
      - 'api.lvh.me:host-gateway'
    profiles:
      - notstart

# for uptrace

  clickhouse:
    image: clickhouse/clickhouse-server:22.7
    restart: on-failure
    environment:
      CLICKHOUSE_DB: uptrace
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:8123/ping']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - ch_data:/var/lib/clickhouse
    ports:
      - '8123:8123'
      - '9000:9000'
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  uptrace:
    image: 'uptrace/uptrace:1.5.9'
    volumes:
      - uptrace_data:/var/lib/uptrace
      - ./config/uptrace.yml:/etc/uptrace/uptrace.yml
    ports:
      - '14317:14317'
      - '14318:14318'
    depends_on:
      clickhouse:
        condition: service_healthy

  alertmanager:
    image: prom/alertmanager:v0.24.0
    restart: on-failure
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/config.yml
      - alertmanager_data:/alertmanager
    ports:
      - 9093:9093
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: on-failure
    ports:
      - '8025:8025'

  vector:
    image: timberio/vector:0.25.X-alpine
    volumes:
      - ./config/vector.toml:/etc/vector/vector.toml:ro
      - /var/log:/var/log:ro
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    profiles:
      # まだnginx logフォーマット設定が完了していないため起動させない
      - notstart


volumes:
  uptrace_data:
    driver: local
  pg_data:
    driver: local
  ch_data:
    driver: local
  alertmanager_data:
    driver: local
