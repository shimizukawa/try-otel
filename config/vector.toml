# https://vector.dev/docs/setup/quickstart/

# [sources.syslog]
# # https://vector.dev/docs/reference/configuration/sources/file/
# type = "file"
# include = ["/var/log/syslog"]
# read_from = "end"
#
# [transforms.modify_syslog]
# type = "remap"
# inputs = ["syslog"]
# # https://vector.dev/docs/reference/configuration/transforms/remap/
# source = '''
#   structured = parse_syslog!(.message)
#   . = merge(., structured)
#   .service = "syslog"
#   .timestamp = parse_timestamp(.date, "%b %d %X") ?? now()
# '''
# # https://vector.dev/docs/reference/vrl/functions/#parse_timestamp

[sources.nginx]
# https://vector.dev/docs/reference/configuration/sources/file/
type = "file"
include = ["/var/log/nginx/access.log", "/var/log/nginx/error.log"]
read_from = "end"

[transforms.modify_nginx]
type = "remap"
inputs = ["nginx"]
# https://vector.dev/docs/reference/configuration/transforms/remap/
source = '''
  .http = parse_nginx_log(.message, "combined") ?? parse_nginx_log!(.message, "error")
  path_parts = split(string!(.http.path), "?", limit: 2)
  .http.path = path_parts[0]
  status = to_int(.http.status)
  .severity = if (status<400){"info"} else if (status<500){"warn"} else {"error"}
  .timestamp = .http.timestamp || now()
  . = flatten(.)

  ."http.query" = parse_query_string(to_string(path_parts[1]) || "")
  ."service" = "nginx"
'''

# Export data to Uptrace.
[sinks.uptrace]
# https://uptrace.dev/get/ingest/vector.html
type = "http"
# inputs = ["modify_syslog", "modify_nginx"]
inputs = ["modify_nginx"]
encoding.codec = "json"
framing.method = "newline_delimited"
compression = "gzip"
uri = "http://uptrace:14318/api/v1/vector/logs"
headers.uptrace-dsn = "http://project2_secret_token@localhost:14317/2"
